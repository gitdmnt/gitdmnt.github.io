---
import type { AstroInstance } from "astro";
import Common from "../../layouts/Common.astro";

function pick_name(src: string): string {
  const dir = src.split("/");
  const name = dir[dir.length - 1].split(".")[0];
  return name;
}

export async function getStaticPaths() {
  const posts: AstroInstance[] = await Astro.glob("/src/content/illust/*.md");
  // ここ最悪
  function pick_name(src: string): string {
    const dir = src.split("/");
    const name = dir[dir.length - 1].split(".")[0];
    return name;
  }
  interface Obj {
    params: {
      picture: string;
    };
  }
  const pictures: Obj[] = posts.map((p) => {
    return {
      params: {
        picture: pick_name(p.file),
      },
    };
  });

  return pictures;
}
const { picture } = Astro.params;
const md = await Astro.glob("/src/content/illust/*.md");

const caption = md.filter((p) => pick_name(p.file) === picture)[0];
---

<Common title={picture}>
  <div class="picture_frame">
    <img
      class="picture"
      alt={caption.frontmatter.title + ", " + caption.frontmatter.description}
      src={"/src/content/illust/" + picture + ".png"}
    />
  </div>
  {(<caption.Content />)}
  <div class="caption">
    <h1 class="title">{caption.frontmatter.title}</h1>
    <p class="date">
      {
        () => {
          const d: Date = new Date(caption.frontmatter.date);
          return d.toLocaleDateString();
        }
      }
    </p>
    <ul class="tags">
      {
        caption.frontmatter.tags.map((tag) => {
          return <li class="tag">{tag}</li>;
        })
      }
    </ul>
    <p class="description">{caption.frontmatter.description}</p>
  </div>
</Common>
<style>
  .picture_frame {
    margin: auto;
  }
  img {
    width: 80%;
    margin-inline: auto;
    margin-block: 20px;
    display: block;
  }
  .caption {
    margin: auto;
  }
  .title {
    text-align: center;
    margin-block: 1.5rem;
  }
  .date {
    text-align: right;
    color: #cccccc;
    font-size: 8pt;
    margin: 0;
  }
  .tags {
    list-style: none;
    padding: 0;
    margin-block: 0;
  }
  .tag {
    display: inline;
    padding: 0.2rem;
    color: #444444;
    font-size: 10pt;
  }
</style>
